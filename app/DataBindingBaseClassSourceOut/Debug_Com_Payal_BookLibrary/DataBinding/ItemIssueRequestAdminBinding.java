// Generated by view binder compiler. Do not edit!
package com.akash.booklibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akash.booklibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemIssueRequestAdminBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatButton btnApprove;

  @NonNull
  public final ImageView imgProviderLogo;

  @NonNull
  public final LinearLayout llDate;

  @NonNull
  public final LinearLayout llFine;

  @NonNull
  public final LinearLayout llLocation;

  @NonNull
  public final TextView txtBookAuthor;

  @NonNull
  public final TextView txtBookAvailability;

  @NonNull
  public final TextView txtBookName;

  @NonNull
  public final TextView txtBookPlatform;

  @NonNull
  public final TextView txtBookRackNo;

  @NonNull
  public final TextView txtBookSide;

  @NonNull
  public final TextView txtBookStatus;

  @NonNull
  public final TextView txtBookStudent;

  @NonNull
  public final TextView txtBookType;

  @NonNull
  public final TextView txtLateFine;

  private ItemIssueRequestAdminBinding(@NonNull CardView rootView,
      @NonNull AppCompatButton btnApprove, @NonNull ImageView imgProviderLogo,
      @NonNull LinearLayout llDate, @NonNull LinearLayout llFine, @NonNull LinearLayout llLocation,
      @NonNull TextView txtBookAuthor, @NonNull TextView txtBookAvailability,
      @NonNull TextView txtBookName, @NonNull TextView txtBookPlatform,
      @NonNull TextView txtBookRackNo, @NonNull TextView txtBookSide,
      @NonNull TextView txtBookStatus, @NonNull TextView txtBookStudent,
      @NonNull TextView txtBookType, @NonNull TextView txtLateFine) {
    this.rootView = rootView;
    this.btnApprove = btnApprove;
    this.imgProviderLogo = imgProviderLogo;
    this.llDate = llDate;
    this.llFine = llFine;
    this.llLocation = llLocation;
    this.txtBookAuthor = txtBookAuthor;
    this.txtBookAvailability = txtBookAvailability;
    this.txtBookName = txtBookName;
    this.txtBookPlatform = txtBookPlatform;
    this.txtBookRackNo = txtBookRackNo;
    this.txtBookSide = txtBookSide;
    this.txtBookStatus = txtBookStatus;
    this.txtBookStudent = txtBookStudent;
    this.txtBookType = txtBookType;
    this.txtLateFine = txtLateFine;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemIssueRequestAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemIssueRequestAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_issue_request_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemIssueRequestAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApprove;
      AppCompatButton btnApprove = ViewBindings.findChildViewById(rootView, id);
      if (btnApprove == null) {
        break missingId;
      }

      id = R.id.imgProviderLogo;
      ImageView imgProviderLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgProviderLogo == null) {
        break missingId;
      }

      id = R.id.llDate;
      LinearLayout llDate = ViewBindings.findChildViewById(rootView, id);
      if (llDate == null) {
        break missingId;
      }

      id = R.id.llFine;
      LinearLayout llFine = ViewBindings.findChildViewById(rootView, id);
      if (llFine == null) {
        break missingId;
      }

      id = R.id.llLocation;
      LinearLayout llLocation = ViewBindings.findChildViewById(rootView, id);
      if (llLocation == null) {
        break missingId;
      }

      id = R.id.txtBookAuthor;
      TextView txtBookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtBookAuthor == null) {
        break missingId;
      }

      id = R.id.txtBookAvailability;
      TextView txtBookAvailability = ViewBindings.findChildViewById(rootView, id);
      if (txtBookAvailability == null) {
        break missingId;
      }

      id = R.id.txtBookName;
      TextView txtBookName = ViewBindings.findChildViewById(rootView, id);
      if (txtBookName == null) {
        break missingId;
      }

      id = R.id.txtBookPlatform;
      TextView txtBookPlatform = ViewBindings.findChildViewById(rootView, id);
      if (txtBookPlatform == null) {
        break missingId;
      }

      id = R.id.txtBookRackNo;
      TextView txtBookRackNo = ViewBindings.findChildViewById(rootView, id);
      if (txtBookRackNo == null) {
        break missingId;
      }

      id = R.id.txtBookSide;
      TextView txtBookSide = ViewBindings.findChildViewById(rootView, id);
      if (txtBookSide == null) {
        break missingId;
      }

      id = R.id.txtBookStatus;
      TextView txtBookStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtBookStatus == null) {
        break missingId;
      }

      id = R.id.txtBookStudent;
      TextView txtBookStudent = ViewBindings.findChildViewById(rootView, id);
      if (txtBookStudent == null) {
        break missingId;
      }

      id = R.id.txtBookType;
      TextView txtBookType = ViewBindings.findChildViewById(rootView, id);
      if (txtBookType == null) {
        break missingId;
      }

      id = R.id.txtLateFine;
      TextView txtLateFine = ViewBindings.findChildViewById(rootView, id);
      if (txtLateFine == null) {
        break missingId;
      }

      return new ItemIssueRequestAdminBinding((CardView) rootView, btnApprove, imgProviderLogo,
          llDate, llFine, llLocation, txtBookAuthor, txtBookAvailability, txtBookName,
          txtBookPlatform, txtBookRackNo, txtBookSide, txtBookStatus, txtBookStudent, txtBookType,
          txtLateFine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
