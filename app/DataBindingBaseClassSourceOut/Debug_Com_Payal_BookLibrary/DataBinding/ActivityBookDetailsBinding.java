// Generated by view binder compiler. Do not edit!
package com.akash.booklibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akash.booklibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnBookIssue;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView txtBookAuthor;

  @NonNull
  public final TextView txtBookName;

  @NonNull
  public final TextView txtBookNotAvail;

  @NonNull
  public final TextView txtBookType;

  @NonNull
  public final TextView txtPlatform;

  @NonNull
  public final TextView txtQuantity;

  @NonNull
  public final TextView txtRackNo;

  @NonNull
  public final TextView txtSide;

  private ActivityBookDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnBookIssue, @NonNull ImageView image,
      @NonNull ConstraintLayout main, @NonNull TextView txtBookAuthor,
      @NonNull TextView txtBookName, @NonNull TextView txtBookNotAvail,
      @NonNull TextView txtBookType, @NonNull TextView txtPlatform, @NonNull TextView txtQuantity,
      @NonNull TextView txtRackNo, @NonNull TextView txtSide) {
    this.rootView = rootView;
    this.btnBookIssue = btnBookIssue;
    this.image = image;
    this.main = main;
    this.txtBookAuthor = txtBookAuthor;
    this.txtBookName = txtBookName;
    this.txtBookNotAvail = txtBookNotAvail;
    this.txtBookType = txtBookType;
    this.txtPlatform = txtPlatform;
    this.txtQuantity = txtQuantity;
    this.txtRackNo = txtRackNo;
    this.txtSide = txtSide;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBookIssue;
      AppCompatButton btnBookIssue = ViewBindings.findChildViewById(rootView, id);
      if (btnBookIssue == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.txtBookAuthor;
      TextView txtBookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtBookAuthor == null) {
        break missingId;
      }

      id = R.id.txtBookName;
      TextView txtBookName = ViewBindings.findChildViewById(rootView, id);
      if (txtBookName == null) {
        break missingId;
      }

      id = R.id.txtBookNotAvail;
      TextView txtBookNotAvail = ViewBindings.findChildViewById(rootView, id);
      if (txtBookNotAvail == null) {
        break missingId;
      }

      id = R.id.txtBookType;
      TextView txtBookType = ViewBindings.findChildViewById(rootView, id);
      if (txtBookType == null) {
        break missingId;
      }

      id = R.id.txtPlatform;
      TextView txtPlatform = ViewBindings.findChildViewById(rootView, id);
      if (txtPlatform == null) {
        break missingId;
      }

      id = R.id.txtQuantity;
      TextView txtQuantity = ViewBindings.findChildViewById(rootView, id);
      if (txtQuantity == null) {
        break missingId;
      }

      id = R.id.txtRackNo;
      TextView txtRackNo = ViewBindings.findChildViewById(rootView, id);
      if (txtRackNo == null) {
        break missingId;
      }

      id = R.id.txtSide;
      TextView txtSide = ViewBindings.findChildViewById(rootView, id);
      if (txtSide == null) {
        break missingId;
      }

      return new ActivityBookDetailsBinding((ConstraintLayout) rootView, btnBookIssue, image, main,
          txtBookAuthor, txtBookName, txtBookNotAvail, txtBookType, txtPlatform, txtQuantity,
          txtRackNo, txtSide);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
