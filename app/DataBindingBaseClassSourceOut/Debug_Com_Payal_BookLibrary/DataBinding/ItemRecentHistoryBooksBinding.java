// Generated by view binder compiler. Do not edit!
package com.akash.booklibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akash.booklibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRecentHistoryBooksBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatButton btnReturnBook;

  @NonNull
  public final ImageView imgProviderLogo;

  @NonNull
  public final LinearLayout llDate;

  @NonNull
  public final LinearLayout llFine;

  @NonNull
  public final LinearLayout llIssueDateN;

  @NonNull
  public final TextView txtBookAuthor;

  @NonNull
  public final TextView txtBookName;

  @NonNull
  public final TextView txtBookStatus;

  @NonNull
  public final TextView txtBookStudent;

  @NonNull
  public final TextView txtBookType;

  @NonNull
  public final TextView txtDateHeader;

  @NonNull
  public final TextView txtDateIssue;

  @NonNull
  public final TextView txtIssueDate;

  @NonNull
  public final TextView txtIssueDateN;

  @NonNull
  public final TextView txtLateFine;

  private ItemRecentHistoryBooksBinding(@NonNull CardView rootView,
      @NonNull AppCompatButton btnReturnBook, @NonNull ImageView imgProviderLogo,
      @NonNull LinearLayout llDate, @NonNull LinearLayout llFine,
      @NonNull LinearLayout llIssueDateN, @NonNull TextView txtBookAuthor,
      @NonNull TextView txtBookName, @NonNull TextView txtBookStatus,
      @NonNull TextView txtBookStudent, @NonNull TextView txtBookType,
      @NonNull TextView txtDateHeader, @NonNull TextView txtDateIssue,
      @NonNull TextView txtIssueDate, @NonNull TextView txtIssueDateN,
      @NonNull TextView txtLateFine) {
    this.rootView = rootView;
    this.btnReturnBook = btnReturnBook;
    this.imgProviderLogo = imgProviderLogo;
    this.llDate = llDate;
    this.llFine = llFine;
    this.llIssueDateN = llIssueDateN;
    this.txtBookAuthor = txtBookAuthor;
    this.txtBookName = txtBookName;
    this.txtBookStatus = txtBookStatus;
    this.txtBookStudent = txtBookStudent;
    this.txtBookType = txtBookType;
    this.txtDateHeader = txtDateHeader;
    this.txtDateIssue = txtDateIssue;
    this.txtIssueDate = txtIssueDate;
    this.txtIssueDateN = txtIssueDateN;
    this.txtLateFine = txtLateFine;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecentHistoryBooksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecentHistoryBooksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recent_history_books, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecentHistoryBooksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnReturnBook;
      AppCompatButton btnReturnBook = ViewBindings.findChildViewById(rootView, id);
      if (btnReturnBook == null) {
        break missingId;
      }

      id = R.id.imgProviderLogo;
      ImageView imgProviderLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgProviderLogo == null) {
        break missingId;
      }

      id = R.id.llDate;
      LinearLayout llDate = ViewBindings.findChildViewById(rootView, id);
      if (llDate == null) {
        break missingId;
      }

      id = R.id.llFine;
      LinearLayout llFine = ViewBindings.findChildViewById(rootView, id);
      if (llFine == null) {
        break missingId;
      }

      id = R.id.llIssueDateN;
      LinearLayout llIssueDateN = ViewBindings.findChildViewById(rootView, id);
      if (llIssueDateN == null) {
        break missingId;
      }

      id = R.id.txtBookAuthor;
      TextView txtBookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtBookAuthor == null) {
        break missingId;
      }

      id = R.id.txtBookName;
      TextView txtBookName = ViewBindings.findChildViewById(rootView, id);
      if (txtBookName == null) {
        break missingId;
      }

      id = R.id.txtBookStatus;
      TextView txtBookStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtBookStatus == null) {
        break missingId;
      }

      id = R.id.txtBookStudent;
      TextView txtBookStudent = ViewBindings.findChildViewById(rootView, id);
      if (txtBookStudent == null) {
        break missingId;
      }

      id = R.id.txtBookType;
      TextView txtBookType = ViewBindings.findChildViewById(rootView, id);
      if (txtBookType == null) {
        break missingId;
      }

      id = R.id.txtDateHeader;
      TextView txtDateHeader = ViewBindings.findChildViewById(rootView, id);
      if (txtDateHeader == null) {
        break missingId;
      }

      id = R.id.txtDateIssue;
      TextView txtDateIssue = ViewBindings.findChildViewById(rootView, id);
      if (txtDateIssue == null) {
        break missingId;
      }

      id = R.id.txtIssueDate;
      TextView txtIssueDate = ViewBindings.findChildViewById(rootView, id);
      if (txtIssueDate == null) {
        break missingId;
      }

      id = R.id.txtIssueDateN;
      TextView txtIssueDateN = ViewBindings.findChildViewById(rootView, id);
      if (txtIssueDateN == null) {
        break missingId;
      }

      id = R.id.txtLateFine;
      TextView txtLateFine = ViewBindings.findChildViewById(rootView, id);
      if (txtLateFine == null) {
        break missingId;
      }

      return new ItemRecentHistoryBooksBinding((CardView) rootView, btnReturnBook, imgProviderLogo,
          llDate, llFine, llIssueDateN, txtBookAuthor, txtBookName, txtBookStatus, txtBookStudent,
          txtBookType, txtDateHeader, txtDateIssue, txtIssueDate, txtIssueDateN, txtLateFine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
